#!/bin/sh
#
# Copyright (c) 2011 by Delphix.
# All rights reserved.
#

SUBDIRECTORY_OK=Yes
. git-sh-setup

require_work_tree

while test $# != 0
do
	case "$1" in
	-h)	git diff -h 2>&1 | sed 's/diff/pdiff/g' 1>&2; exit $? ;;
	--)	break ;;
	-*)	args="$args $1" ;;
	*)	break ;;
	esac
	shift
done

# Figure out what branch we're in.
branch="$(git symbolic-ref HEAD 2>/dev/null)" || die "detached head"
branch=${branch##refs/heads/}

# Figure out what branch in the origin we should compare to.
mergebranch="$(git config --get branch.$branch.merge)" || \
    die "branch.$branch.merge is not set"
mergebranch=${mergebranch##refs/heads/}

# Make sure the revision we've constructed maps to something real.
git rev-parse --verify origin/$mergebranch >/dev/null 2>&1 || \
    die "invalid revision 'origin/$mergebranch'"

# Find the common ancestor.
mergebase=$(git merge-base origin/$mergebranch HEAD)

exec git diff $args $mergebase -- $*
